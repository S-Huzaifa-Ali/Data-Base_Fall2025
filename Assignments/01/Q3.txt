-- 1.
------------------------------------------------------------

-- PATIENT table with required constraints:
CREATE TABLE Patient (
  Patient_ID  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  Name        VARCHAR2(150) NOT NULL,
  Gender      CHAR(1) NOT NULL,
  DOB         DATE,
  Email       VARCHAR2(255) UNIQUE,
  Phone       VARCHAR2(20),
  Address     VARCHAR2(400),
  Username    VARCHAR2(100),
  Password    VARCHAR2(100),
  CONSTRAINT chk_gender CHECK (Gender IN ('M','F'))
);

-- DOCTOR table
CREATE TABLE Doctor (
  Doctor_ID       NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  Name            VARCHAR2(150) NOT NULL,
  Specialization  VARCHAR2(150),
  Username        VARCHAR2(100),
  Password        VARCHAR2(100)
);

-- APPOINTMENT table
CREATE TABLE Appointment (
  Appointment_ID   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  Appointment_Date DATE NOT NULL,
  Appointment_Time VARCHAR2(10), -- e.g. '10:30'
  Status           VARCHAR2(20), -- e.g. 'Booked','Cancelled','Completed'
  Clinic_Number    VARCHAR2(20),
  Patient_ID       NUMBER,
  Doctor_ID        NUMBER,
  CONSTRAINT fk_app_patient FOREIGN KEY (Patient_ID) REFERENCES Patient (Patient_ID),
  CONSTRAINT fk_app_doctor  FOREIGN KEY (Doctor_ID)  REFERENCES Doctor  (Doctor_ID)
);

-- PRESCRIPTION table
CREATE TABLE Prescription (
  Prescription_ID   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  Presc_Date        DATE DEFAULT SYSDATE,
  Doctor_Advice     VARCHAR2(1000), -- could contain medicines / instructions
  Followup_Required CHAR(1) CHECK (Followup_Required IN ('Y','N')) DEFAULT 'N',
  Patient_ID        NUMBER,
  Doctor_ID         NUMBER,
  CONSTRAINT fk_presc_patient FOREIGN KEY (Patient_ID) REFERENCES Patient (Patient_ID),
  CONSTRAINT fk_presc_doctor  FOREIGN KEY (Doctor_ID)  REFERENCES Doctor  (Doctor_ID)
);

-- INVOICE table
CREATE TABLE Invoice (
  Invoice_ID     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  Invoice_Date   DATE DEFAULT SYSDATE,
  Amount         NUMBER(12,2) DEFAULT 0,
  Payment_Status VARCHAR2(20), -- 'Paid', 'Unpaid', 'Refunded'
  Payment_Method VARCHAR2(50),
  Patient_ID     NUMBER,
  CONSTRAINT fk_inv_patient FOREIGN KEY (Patient_ID) REFERENCES Patient (Patient_ID)
);

-- TESTS table (flags for types of tests; Y/N)
CREATE TABLE Tests (
  Test_ID   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  Patient_ID NUMBER,
  Doctor_ID  NUMBER,
  BloodTest  VARCHAR2(3) CHECK (BloodTest IN ('Y','N')) DEFAULT 'N',
  X_Ray      VARCHAR2(3) CHECK (X_Ray IN ('Y','N')) DEFAULT 'N',
  MRI        VARCHAR2(3) CHECK (MRI IN ('Y','N')) DEFAULT 'N',
  CT_Scan    VARCHAR2(3) CHECK (CT_Scan IN ('Y','N')) DEFAULT 'N',
  CONSTRAINT fk_tests_patient FOREIGN KEY (Patient_ID) REFERENCES Patient (Patient_ID),
  CONSTRAINT fk_tests_doctor  FOREIGN KEY (Doctor_ID)  REFERENCES Doctor  (Doctor_ID)
);


-- 2.
------------------------------------------------------------

-- Patients
INSERT INTO Patient (Name, Gender, DOB, Email, Phone, Address, Username, Password)
VALUES ('Ali Khan', 'M', DATE '1990-05-12', 'ali.khan@example.com', '03001234567', 'Street 1, City', 'alik', 'pass1');

INSERT INTO Patient (Name, Gender, DOB, Email, Phone, Address, Username, Password)
VALUES ('Sara Ahmed', 'F', DATE '1988-11-02', 'sara.ahmed@example.com', '03007654321', 'Street 2, City', 'saraa', 'pass2');

INSERT INTO Patient (Name, Gender, DOB, Email, Phone, Address, Username, Password)
VALUES ('Zain Malik', 'M', DATE '2000-01-15', 'zain.malik@example.com', '03009877654', 'Street 3, City', 'zainm', 'pass3');

-- Doctors
INSERT INTO Doctor (Name, Specialization, Username, Password)
VALUES ('Dr. Ayesha', 'Cardiology', 'dray', 'dpass1');

INSERT INTO Doctor (Name, Specialization, Username, Password)
VALUES ('Dr. Bilal', 'Orthopedics', 'drb', 'dpass2');

-- Appointments
INSERT INTO Appointment (Appointment_Date, Appointment_Time, Status, Clinic_Number, Patient_ID, Doctor_ID)
VALUES (DATE '2025-09-02', '10:30', 'Booked', 'C101', 1, 1);

INSERT INTO Appointment (Appointment_Date, Appointment_Time, Status, Clinic_Number, Patient_ID, Doctor_ID)
VALUES (DATE '2025-09-05', '14:00', 'Cancelled', 'C102', 2, 2);

INSERT INTO Appointment (Appointment_Date, Appointment_Time, Status, Clinic_Number, Patient_ID, Doctor_ID)
VALUES (DATE '2025-09-02', '11:00', 'Booked', 'C101', 3, 1);

-- Prescriptions (including one on 2025-09-02)
INSERT INTO Prescription (Presc_Date, Doctor_Advice, Followup_Required, Patient_ID, Doctor_ID)
VALUES (DATE '2025-09-02', 'Paracetamol 500mg TID for 5 days; Vitamin D supplement', 'N', 1, 1);

INSERT INTO Prescription (Presc_Date, Doctor_Advice, Followup_Required, Patient_ID, Doctor_ID)
VALUES (DATE '2025-09-01', 'Physio exercises; Ibuprofen PRN', 'Y', 2, 2);

-- Invoices
INSERT INTO Invoice (Invoice_Date, Amount, Payment_Status, Payment_Method, Patient_ID)
VALUES (DATE '2025-09-02', 1500, 'Unpaid', 'Cash', 1);

INSERT INTO Invoice (Invoice_Date, Amount, Payment_Status, Payment_Method, Patient_ID)
VALUES (DATE '2025-09-03', 2000, 'Paid', 'Card', 2);

-- Tests
INSERT INTO Tests (Patient_ID, Doctor_ID, BloodTest, X_Ray, MRI, CT_Scan)
VALUES (1, 1, 'Y', 'N', 'N', 'N');

INSERT INTO Tests (Patient_ID, Doctor_ID, BloodTest, X_Ray, MRI, CT_Scan)
VALUES (2, 2, 'N', 'Y', 'N', 'N');

COMMIT;


-- 3.
------------------------------------------------------------

-- (a)
UPDATE Patient
SET Phone = '03110001111',
    Email = 'ali.khan_new@example.com'
WHERE Patient_ID = 1;

-- (b)
UPDATE Invoice
SET Payment_Status = 'Paid'
WHERE Patient_ID = 1 AND Payment_Status = 'Unpaid';

-- (c)
DELETE FROM Appointment
WHERE Status = 'Cancelled';

-- (d)
DELETE FROM Invoice
WHERE Payment_Status = 'Refunded';

-- (e)
SELECT * FROM Appointment
WHERE Status = 'Booked';

-- (f)
SELECT * FROM Invoice
WHERE Payment_Status = 'Unpaid';

-- (g)
SELECT t.Test_ID, t.Patient_ID, p.Name AS PatientName, t.Doctor_ID, d.Name AS DoctorName
FROM Tests t
LEFT JOIN Patient p ON t.Patient_ID = p.Patient_ID
LEFT JOIN Doctor  d ON t.Doctor_ID  = d.Doctor_ID
WHERE t.BloodTest = 'Y';

-- (h)
SELECT *
FROM Prescription
WHERE TRUNC(Presc_Date) = DATE '2025-09-02';


-- 4. ADVANCED SQL
------------------------------------------------------------

-- (a)
SELECT DISTINCT p.Patient_ID, p.Name AS PatientName,
       d.Doctor_ID, d.Name AS DoctorName,
       a.Appointment_Date, a.Appointment_Time, a.Clinic_Number
FROM Appointment a
JOIN Patient p ON a.Patient_ID = p.Patient_ID
JOIN Doctor  d ON a.Doctor_ID  = d.Doctor_ID
WHERE a.Status = 'Booked'
ORDER BY p.Patient_ID, a.Appointment_Date;

-- (b) Show all lab tests of patients and the doctor who requested them.
SELECT t.Test_ID, p.Patient_ID, p.Name AS PatientName,
       d.Doctor_ID, d.Name AS DoctorName,
       t.BloodTest, t.X_Ray, t.MRI, t.CT_Scan
FROM Tests t
LEFT JOIN Patient p ON t.Patient_ID = p.Patient_ID
LEFT JOIN Doctor  d ON t.Doctor_ID  = d.Doctor_ID
ORDER BY t.Test_ID;

-- (c)
SELECT pr.Prescription_ID, pr.Presc_Date, pr.Doctor_Advice, pr.Followup_Required,
       p.Patient_ID, p.Name AS PatientName, d.Doctor_ID, d.Name AS DoctorName
FROM Prescription pr
JOIN Patient p ON pr.Patient_ID = p.Patient_ID
JOIN Doctor  d ON pr.Doctor_ID  = d.Doctor_ID
WHERE p.Name = 'Ali Khan';

-- (d)
SELECT pr.Prescription_ID, pr.Presc_Date, pr.Doctor_Advice,
       p.Patient_ID, p.Name AS PatientName,
       d.Doctor_ID, d.Name AS DoctorName
FROM Prescription pr
JOIN Patient p ON pr.Patient_ID = p.Patient_ID
JOIN Doctor  d ON pr.Doctor_ID  = d.Doctor_ID
WHERE pr.Followup_Required = 'Y';